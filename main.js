(()=>{"use strict";class e{constructor(e){this.server=e}async add(e){const t=await fetch(this.server,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}),s=await t;return await s.json()}}function t(e,t){const s=document.querySelector(".chat");let n="connection";"you"===e&&(n="connection__you");const o=`\n            <div class="${n}">\n                <div class="message">\n                    <span class="message__info ">${e}, ${function(){const e=new Date,t=e.getHours();let s=e.getMinutes(),n=e.getDate(),o=e.getMonth()+1;return s=s<10?`0${s}`:s,n=n<10?`0${n}`:n,o=o<10?`0${o}`:o,`${t}:${s} ${n}.${o}.${e.getFullYear()}`}()}</span>\n                    <p class="message__text">${t}</p>\n                </div>\n            </div>\n    `;s.insertAdjacentHTML("beforeend",o)}(new class{constructor(){this.root=document.getElementById("root"),this.request=new e("https://ahj-8-1-server-v1.onrender.com/new-user"),this.popup=this.root.querySelector(".popup"),this.input=this.root.querySelector(".input__title"),this.container=this.root.querySelector(".container"),this.connectionUsers=this.container.querySelector(".connection__users"),this.errorName=this.popup.querySelector(".error__name"),this.chatSend=document.querySelector(".chat__send"),this.popupForm=document.querySelector(".popup__form"),this.id=null,this.userName=null}init(){this.chatSend.addEventListener("submit",(e=>this.onSubmit(e))),this.popupForm.addEventListener("submit",(e=>this.onSubmit(e))),window.addEventListener("beforeunload",(()=>{this.ws.send(JSON.stringify({type:"exit",name:this.userName,id:this.id}))}))}wsActive(){this.ws=new WebSocket("wss://ahj-8-1-server-v1.onrender.com/"),this.ws.addEventListener("open",(()=>{console.log("ws open")})),this.ws.addEventListener("close",(()=>{console.log("ws close")})),this.ws.addEventListener("message",(e=>{const s=JSON.parse(e.data);s instanceof Array&&(this.connectionUsers.replaceChildren(),s.forEach((e=>{!function(e,t){const s=document.querySelector(".connection__users");e.name===t&&(e.name="you");const n=`\n            <li class="connection__user" data-id="${e.id}">\n                <p class="connection__prewiew"></p>\n                <p class="user">${e.name}</p>\n            </li>\n    `;s.insertAdjacentHTML("beforeend",n)}(e,this.userName)}))),null!==s.text&&void 0!==s.text&&(s.name===this.userName&&(s.name="you"),t(s.name,s.text),console.log("ws message"))})),this.ws.addEventListener("error",(()=>{console.log("ws error")}))}onSubmit(e){e.preventDefault();const t={};if(e.target.classList.contains("popup__form")){const e=this.input.value.trim();e.length>0&&this.request.add({name:e}).then((e=>{const{status:t}=e;"ok"===t&&(this.status=e.status,this.popup.classList.add("d__none"),this.userName=e.user.name,this.id=e.user.id,this.data=e,this.wsActive(),this.container.classList.remove("d__none")),"error"===t&&this.errorName.classList.remove("d__none")}))}if(e.target.classList.contains("chat__send")){const s=e.target.querySelector(".chat__message"),n=s.value.trim();if(!n)return;if(t.type="send",t.id=this.id,t.name=this.userName,t.text=n,!t)return;this.ws.send(JSON.stringify(t)),s.value=""}}}).init()})();